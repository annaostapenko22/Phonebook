{"version":3,"sources":["components/contact-item/ContactItem.module.css","components/alert/Notification.module.css","components/contact-item/ContactItem.js","components/search-panel/SearchPanel.js","components/contact-list/ContactList.js","components/alert/Notification.js","components/phonebook-form/PhonebookForm.js","components/app/App.js","index.js","components/transitions/slide-transition.module.css","components/phonebook-form/PhonebookForm.module.css","components/contact-list/ContactList.module.css","components/search-panel/SearchPanel.module.css"],"names":["module","exports","ContactItem","handleClick","evt","ids","currentTarget","closest","dataset","value","props","handleDelete","this","name","number","className","styles","contactItem","Icon","style","color","backgroundColor","borderRadius","fontSize","cursor","onClick","Component","SearchPanel","state","onChangePanel","values","target","onHandleFilter","wrapper","title","TextField","id","label","type","variant","onChange","searchField","ContactList","isOpen","setState","contactsContainer","CSSTransition","in","timeout","classNames","slideTransition","contacts","length","TransitionGroup","component","list","map","elem","key","data-value","Notification","container","PhonebookForm","filter","error","alreadyExist","notitficationTitle","deleteItems","onHandleGetValue","onHandleSubmit","preventDefault","find","includes","showNotification","getPost","shortId","generate","alert","post","setFilterState","filterItems","contactList","toLowerCase","notificationTitle","setTimeout","users","JSON","parse","localStorage","getItem","prevProps","prevState","stringify","setItem","filteredItems","unmountOnExit","onSubmit","phonebook","noValidate","autoComplete","input","Button","App","Container","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,YAAc,mC,oBCAhCD,EAAOC,QAAU,CAAC,UAAY,kC,0UCmBfC,E,2MAhBbC,YAAc,SAAAC,GACZ,IAAMC,EAAMD,EAAIE,cAAcC,QAAQ,MAAMC,QAAQC,MACpD,EAAKC,MAAMC,aAAaN,I,wEAEhB,IAAD,EACkBO,KAAKF,MAAtBG,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,yBAAKC,UAAWC,IAAOC,aACrB,2BAAIJ,EAAJ,KACA,2BAAIC,GACJ,kBAACI,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,MAAOC,gBAAiB,QAASC,aAAc,MAAOC,SAAU,GAAIC,OAAQ,WAAYC,QAASb,KAAKT,aAA5H,sB,GAXkBuB,a,0BCoBXC,E,2MAnBbC,MAAQ,CACNnB,MAAO,I,EAGToB,cAAgB,SAAAzB,GACd,IAAM0B,EAAS1B,EAAI2B,OAAOtB,MAC1B,EAAKC,MAAMsB,eAAeF,I,wEAG1B,OACE,yBAAKf,UAAWC,IAAOiB,SACrB,wBAAIlB,UAAWC,IAAOkB,OAAtB,yBACA,kBAACC,EAAA,EAAD,CAAWC,GAAG,gBAAgBC,MAAM,iBAAiBC,KAAK,SAASC,QAAQ,WACzEC,SAAU5B,KAAKiB,cAAed,UAAWC,IAAOyB,mB,GAdhCf,a,0BCuCXgB,E,2MAnCbd,MAAQ,CACNe,QAAQ,G,mFAGR/B,KAAKgC,SAAS,CAAED,QAAQ,M,+BAEhB,IAAD,OACCA,EAAW/B,KAAKgB,MAAhBe,OACR,OACE,yBAAK5B,UAAWC,IAAO6B,mBACrB,kBAACC,EAAA,EAAD,CAAeC,GAAIJ,EAAQK,QAAS,IAAKC,WAAYC,KACnD,wBAAInC,UAAWC,IAAOkB,OAAtB,aAEF,yBAAKnB,UAAWC,IAAOiB,SACpBrB,KAAKF,MAAMyC,SAASC,OAAS,GAAO,kBAAC,EAAD,CAAapB,eAAgBpB,KAAKF,MAAMsB,iBAE7E,kBAACqB,EAAA,EAAD,CAAiBC,UAAU,KAAKvC,UAAWC,IAAOuC,MAC/C3C,KAAKF,MAAMD,OACVG,KAAKF,MAAMD,MAAM+C,KAAI,SAAAC,GAAI,OACvB,kBAACX,EAAA,EAAD,CAAeY,IAAKD,EAAKrB,GAAIY,QAAS,IAAKC,WAAYC,KACrD,wBAAIS,aAAYF,EAAKrB,IACnB,kBAAC,EAAD,iBACMqB,EADN,CAEE9C,aAAc,EAAKD,MAAMC,4B,GAxBrBe,a,qDCKXkC,EATM,SAAC,GACrB,IADsB1B,EACvB,EADuBA,MAEnB,OACI,yBAAKnB,UAAWC,IAAO6C,WAC/B,2BAAI3B,KC6JW4B,E,2MAxJblC,MAAQ,CACNuB,SAAU,GACVY,OAAQ,GACRlD,KAAM,GACNC,OAAQ,GACR6B,QAAQ,EACRqB,OAAO,EACPC,cAAc,EACdC,mBAAoB,I,EAYtBC,YAAc,SAAA/B,GACZ,EAAKQ,UAAS,YAEZ,MAAO,CACLO,SAH4B,EAAfA,SACSY,QAAO,SAAAN,GAAI,OAAIA,EAAKrB,KAAOA,U,EAOvDgC,iBAAmB,SAAAhE,GACjB,IAAMK,EAAQL,EAAI2B,OAAOtB,MACnBI,EAAOT,EAAI2B,OAAOlB,KACxB,EAAK+B,SAAL,eACG/B,EAAOJ,K,EAIZ4D,eAAiB,SAAAjE,GACfA,EAAIkE,iBADkB,MAGG,EAAK1C,MAAtBf,EAHc,EAGdA,KAAMC,EAHQ,EAGRA,OACTD,GAASC,EAIV,EAAKc,MAAMuB,SAASoB,MAAK,SAAAd,GAAI,OAAIA,EAAK5C,KAAK2D,SAAS3D,MACtD,EAAK4D,iBAAL,wBAAuC5D,EAAvC,qBAIF,EAAK6D,QAAQ,CAAEtC,GAAIuC,IAAQC,WAAY/D,OAAMC,WAC7C,EAAK8B,SAAS,CAAE/B,KAAM,KACtB,EAAK+B,SAAS,CAAE9B,OAAQ,MAVtB+D,MAAM,+B,EAaVH,QAAU,SAAAI,GACR,EAAKlC,UAAS,SAAAhB,GAAK,MAAK,CACtBuB,SAAS,GAAD,mBAAMvB,EAAMuB,UAAZ,CAAsB2B,S,EAIlCC,eAAiB,SAAAtE,GACf,EAAKmC,SAAS,CAAEmB,OAAQtD,K,EAG1BuE,YAAc,SAACjB,EAAQZ,GACrB,GAAI,EAAKvB,MAAMuB,SAAU,CACvB,IAAI8B,EAAW,YAAO9B,GAMtB,OALIY,IACFkB,EAAcA,EAAYlB,QAAO,SAAAN,GAAI,OACnCA,EAAK5C,KAAKqE,cAAcV,SAAST,OAG9BkB,I,EAIXR,iBAAmB,SAAAU,GACjB,EAAKvC,SAAS,CAAEuC,oBAAmBlB,cAAc,IACjDmB,YAAW,kBAAM,EAAKxC,SAAS,CAAEuC,kBAAmB,GAAIlB,cAAc,EAAOpD,KAAM,GAAIC,OAAQ,OAAO,M,mFApEtG,IAAMuE,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAC3D7E,KAAKgC,SAAS,CAAEO,SAAUkC,EAAO1C,QAAQ,EAAMsB,cAAc,M,yCAE5CyB,EAAWC,GACxBL,KAAKM,UAAUD,EAAUxC,YAAcmC,KAAKM,UAAUhF,KAAKgB,MAAMuB,WACnEqC,aAAaK,QAAQ,QAASP,KAAKM,UAAUhF,KAAKgB,MAAMuB,a,+BAkElD,IAAD,EACoCvC,KAAKgB,MAAxCuB,EADD,EACCA,SAAUtC,EADX,EACWA,KAAMC,EADjB,EACiBA,OAAQiD,EADzB,EACyBA,OAC1B+B,EAAgBlF,KAAKoE,YAAYjB,EAAQZ,GAFxC,EAG0BvC,KAAKgB,MAA9Be,EAHD,EAGCA,OAAQsB,EAHT,EAGSA,aAChB,OACE,6BACE,kBAACnB,EAAA,EAAD,CACEC,GAAIkB,EACJjB,QAAS,IACTC,WAAYC,IACZ6C,eAAa,GAEb,kBAAC,EAAD,CAAc7D,MAAOtB,KAAKgB,MAAMuD,qBAGlC,0BACEa,SAAUpF,KAAKyD,eACftD,UAAWC,IAAOiF,UAClBC,YAAU,EACVC,aAAa,OAEb,kBAACrD,EAAA,EAAD,CACEC,GAAIJ,EACJK,QAAS,IACTC,WAAYC,IACZ6C,eAAa,GAEb,wBAAIhF,UAAWC,IAAOkB,OAAtB,cAEF,yBAAKnB,UAAWC,IAAOiB,SACrB,kBAACE,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,OACNE,QAAQ,WACRD,KAAK,OACLE,SAAU5B,KAAKwD,iBACf3D,MAAOI,EACPA,KAAK,OACLE,UAAWC,IAAOoF,MAClBD,aAAa,WAEf,kBAAChE,EAAA,EAAD,CACE6B,MAAOpD,KAAKgB,MAAMoC,MAClB5B,GAAG,kBACHC,MAAM,SACNE,QAAQ,WACRD,KAAK,MACL7B,MAAOK,EACP0B,SAAU5B,KAAKwD,iBACfvD,KAAK,SACLE,UAAWC,IAAOoF,QAEpB,kBAACC,EAAA,EAAD,CAAQ9D,QAAQ,YAAYnB,MAAM,UAAUkB,KAAK,UAAjD,iBAKH1B,KAAKgB,MAAMuB,SAASC,OAAS,GAC5B,kBAAC,EAAD,CACE3C,MAAOqF,EACP9D,eAAgBpB,KAAKmE,eACrBpE,aAAcC,KAAKuD,YACnBhB,SAAUvC,KAAKgB,MAAMuB,gB,GAjJLzB,aCEb4E,EARH,WACV,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,EAAD,QCHNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCHjD5G,EAAOC,QAAU,CAAC,MAAQ,gCAAgC,YAAc,sCAAsC,KAAO,+BAA+B,WAAa,uC,mBCAjKD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,QAAU,+BAA+B,MAAQ,6BAA6B,MAAQ,+B,mBCArJD,EAAOC,QAAU,CAAC,kBAAoB,uCAAuC,QAAU,6BAA6B,KAAO,0BAA0B,MAAQ,6B,mBCA7JD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,YAAc,iCAAiC,MAAQ,8B","file":"static/js/main.60a8585c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__2-dhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__Ek8_f\"};","import React, { Component } from 'react';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport styles from \"./ContactItem.module.css\"\r\nclass ContactItem extends Component {\r\n  handleClick = evt => {\r\n    const ids = evt.currentTarget.closest('li').dataset.value;\r\n    this.props.handleDelete(ids);\r\n  };\r\n  render() {\r\n    const { name, number } = this.props;\r\n    return (\r\n      <div className={styles.contactItem}>\r\n        <p>{name}:</p>\r\n        <p>{number}</p>\r\n        <Icon style={{ color: \"red\", backgroundColor: \"white\", borderRadius: \"50%\", fontSize: 24, cursor: \"pointer\"}} onClick={this.handleClick}>highlight_off</Icon>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactItem;\r\n","import React, { Component } from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport styles from \"./SearchPanel.module.css\"\r\nclass SearchPanel extends Component {\r\n  state = {\r\n    value: '',\r\n   \r\n  };\r\n  onChangePanel = evt => {\r\n    const values = evt.target.value;\r\n    this.props.onHandleFilter(values);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <h3 className={styles.title}>Find contacts by name</h3>\r\n        <TextField id=\"filled-search\" label=\"Search contact\" type=\"search\" variant=\"outlined\" \r\n          onChange={this.onChangePanel} className={styles.searchField}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPanel;","import React, { Component } from \"react\";\r\nimport ContactItem from \"../contact-item/ContactItem\";\r\nimport SearchPanel from \"../search-panel/SearchPanel\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport slideTransition from \"../transitions/slide-transition.module.css\";\r\nclass ContactList extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ isOpen: true });\r\n  }\r\n  render() {\r\n    const { isOpen } = this.state;\r\n    return (\r\n      <div className={styles.contactsContainer}>\r\n        <CSSTransition in={isOpen} timeout={400} classNames={slideTransition} >\r\n          <h2 className={styles.title}>Contacts</h2>\r\n        </CSSTransition>\r\n        <div className={styles.wrapper}>\r\n          {this.props.contacts.length > 1 && ( <SearchPanel onHandleFilter={this.props.onHandleFilter} />)}\r\n         \r\n          <TransitionGroup component=\"ul\" className={styles.list}>\r\n            {this.props.value &&\r\n              this.props.value.map(elem => (\r\n                <CSSTransition key={elem.id} timeout={400} classNames={slideTransition} >\r\n                  <li data-value={elem.id}>\r\n                    <ContactItem\r\n                      {...elem}\r\n                      handleDelete={this.props.handleDelete}\r\n                    />\r\n                  </li>\r\n                </CSSTransition>\r\n              ))}\r\n          </TransitionGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport styles from \"./Notification.module.css\"\r\nconst Notification = ({title}) => \r\n{\r\n    return (\r\n        <div className={styles.container}>\r\n<p>{title}</p>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport slideTransition from \"../transitions/slide-transition.module.css\";\r\nimport shortId from \"short-id\";\r\nimport ContactList from \"../contact-list/ContactList\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport styles from \"./PhonebookForm.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"typeface-roboto\";\r\nimport Notification from \"../alert/Notification\";\r\nclass PhonebookForm extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n    name: \"\",\r\n    number: \"\",\r\n    isOpen: false,\r\n    error: false,\r\n    alreadyExist: false,\r\n    notitficationTitle: \"\"\r\n  };\r\n  componentDidMount() {\r\n    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n    this.setState({ contacts: users, isOpen: true, alreadyExist: false });\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (JSON.stringify(prevState.contacts) !== JSON.stringify(this.state.contacts)) {\r\n      localStorage.setItem(\"users\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  deleteItems = id => {\r\n    this.setState(({ contacts }) => {\r\n      const newArr = contacts.filter(elem => elem.id !== id);\r\n      return {\r\n        contacts: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  onHandleGetValue = evt => {\r\n    const value = evt.target.value;\r\n    const name = evt.target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  onHandleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    if (!name || !number) {\r\n      alert(\"PLease fill all the fields\");\r\n      return;\r\n    }\r\n    if (this.state.contacts.find(elem => elem.name.includes(name))) {\r\n      this.showNotification(`This contact: ${name} already exists`);\r\n      return;\r\n    }\r\n\r\n    this.getPost({ id: shortId.generate(), name, number });\r\n    this.setState({ name: \"\" });\r\n    this.setState({ number: \"\" });\r\n  };\r\n\r\n  getPost = post => {\r\n    this.setState(state => ({\r\n      contacts: [...state.contacts, post]\r\n    }));\r\n  };\r\n\r\n  setFilterState = value => {\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  filterItems = (filter, contacts) => {\r\n    if (this.state.contacts) {\r\n      let contactList = [...contacts];\r\n      if (filter) {\r\n        contactList = contactList.filter(elem =>\r\n          elem.name.toLowerCase().includes(filter)\r\n        );\r\n      }\r\n      return contactList;\r\n    }\r\n  };\r\n\r\n  showNotification = notificationTitle => {\r\n    this.setState({ notificationTitle, alreadyExist: true });\r\n    setTimeout(() => this.setState({ notificationTitle: \"\", alreadyExist: false, name: \"\", number: \"\" }), 3000);\r\n  };\r\n\r\n  render() {\r\n    const { contacts, name, number, filter } = this.state;\r\n    const filteredItems = this.filterItems(filter, contacts);\r\n    const { isOpen, alreadyExist } = this.state;\r\n    return (\r\n      <div>\r\n        <CSSTransition\r\n          in={alreadyExist}\r\n          timeout={400}\r\n          classNames={slideTransition}\r\n          unmountOnExit\r\n        >\r\n          <Notification title={this.state.notificationTitle} />\r\n        </CSSTransition>\r\n\r\n        <form\r\n          onSubmit={this.onHandleSubmit}\r\n          className={styles.phonebook}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          <CSSTransition\r\n            in={isOpen}\r\n            timeout={400}\r\n            classNames={slideTransition}\r\n            unmountOnExit\r\n          >\r\n            <h2 className={styles.title}>Phonebook</h2>\r\n          </CSSTransition>\r\n          <div className={styles.wrapper}>\r\n            <TextField\r\n              id=\"outlined-basic1\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              type=\"text\"\r\n              onChange={this.onHandleGetValue}\r\n              value={name}\r\n              name=\"name\"\r\n              className={styles.input}\r\n              autoComplete=\"string\"\r\n            />\r\n            <TextField\r\n              error={this.state.error}\r\n              id=\"outlined-basic2\"\r\n              label=\"Number\"\r\n              variant=\"outlined\"\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={this.onHandleGetValue}\r\n              name=\"number\"\r\n              className={styles.input}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Add contact\r\n            </Button>\r\n          </div>\r\n        </form>\r\n        {this.state.contacts.length > 0 && (\r\n          <ContactList\r\n            value={filteredItems}\r\n            onHandleFilter={this.setFilterState}\r\n            handleDelete={this.deleteItems}\r\n            contacts={this.state.contacts}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhonebookForm;\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Phonebook from \"../phonebook-form/PhonebookForm\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Phonebook />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/app/App\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide-transition_enter__1tiCh\",\"enterActive\":\"slide-transition_enterActive__kYugx\",\"exit\":\"slide-transition_exit__3ZmO-\",\"exitActive\":\"slide-transition_exitActive__gIPEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"PhonebookForm_phonebook__oAARH\",\"wrapper\":\"PhonebookForm_wrapper__1U0wU\",\"input\":\"PhonebookForm_input__1iAeS\",\"title\":\"PhonebookForm_title__2TVDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsContainer\":\"ContactList_contactsContainer__2Fspj\",\"wrapper\":\"ContactList_wrapper__oRNiA\",\"list\":\"ContactList_list__2Mcon\",\"title\":\"ContactList_title__3NOVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SearchPanel_wrapper__15YVB\",\"searchField\":\"SearchPanel_searchField__2E7ae\",\"title\":\"SearchPanel_title__2b5mT\"};"],"sourceRoot":""}