{"version":3,"sources":["components/contact-item/ContactItem.module.css","components/alert/Notification.module.css","redux/types.js","redux/actions.js","components/contact-item/ContactItem.js","components/search-panel/SearchPanel.js","components/contact-list/ContactList.js","components/alert/Notification.js","components/phonebook-form/PhonebookForm.js","components/app/App.js","redux/reducers.js","store.js","index.js","components/transitions/slide-transition.module.css","components/phonebook-form/PhonebookForm.module.css","components/contact-list/ContactList.module.css","components/search-panel/SearchPanel.module.css"],"names":["module","exports","deleteContact","id","type","Type","payload","ContactItem","handleClick","evt","ids","currentTarget","closest","dataset","value","props","this","name","number","className","styles","contactItem","Icon","style","color","backgroundColor","borderRadius","fontSize","cursor","onClick","Component","connect","state","contacts","dispatch","SearchPanel","onChangePanel","values","target","toLowerCase","setFilter","wrapper","title","TextField","label","variant","onChange","searchField","ContactList","isOpen","setState","contactsContainer","CSSTransition","in","timeout","classNames","slideTransition","length","TransitionGroup","component","list","map","elem","key","data-value","Notification","container","PhonebookForm","error","alreadyExist","notitficationTitle","deleteItems","filter","onHandleGetValue","onHandleSubmit","preventDefault","find","includes","showNotification","contact","shortId","generate","addContact","alert","getPost","post","filterItems","contactList","notificationTitle","setTimeout","users","JSON","parse","localStorage","getItem","setAllContacts","prevProps","prevState","stringify","setItem","filteredItems","unmountOnExit","onSubmit","phonebook","noValidate","autoComplete","input","Button","App","Container","maxWidth","initialState","combineReducers","store","createStore","rootReducer","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a65590ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__2-dhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__Ek8_f\"};","export default {\r\n    ADD_CONTACT: \"ADD_CONTACT\",\r\n    DELETE_CONTACT: \"DELETE_CONTACT\",\r\n    SET_ALL_CONTACTS: \"SET_ALL_CONTACTS\",\r\n    SET_FILTER: \"SET_FILTER\"\r\n}","import Type from \"../redux/types\";\r\n\r\nexport  const addContact = (contact)=> ({\r\n    type: Type.ADD_CONTACT,\r\n    payload: contact\r\n})\r\n\r\nexport  const deleteContact = (id)=> ({\r\n    type: Type.DELETE_CONTACT,\r\n    payload: id\r\n})\r\n\r\nexport const setAllContacts = (contacts)=> ({\r\n    type: Type.SET_ALL_CONTACTS,\r\n    payload: contacts\r\n})\r\n\r\nexport const setFilter = (value) => ({\r\n    type: Type.SET_FILTER,\r\n    payload: value\r\n})","import React, { Component } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport styles from \"./ContactItem.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/actions\";\r\nclass ContactItem extends Component {\r\n  handleClick = evt => {\r\n    const ids = evt.currentTarget.closest(\"li\").dataset.value;\r\n    this.props.deleteContact(ids);\r\n  };\r\n  render() {\r\n    const { name, number } = this.props;\r\n    return (\r\n      <div className={styles.contactItem}>\r\n        <p>{name}:</p>\r\n        <p>{number}</p>\r\n        <Icon\r\n          style={{\r\n            color: \"red\",\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"50%\",\r\n            fontSize: 24,\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={this.handleClick}\r\n        >\r\n          highlight_off\r\n        </Icon>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteContact(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import React, { Component } from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport styles from \"./SearchPanel.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {setFilter} from \"../../redux/actions\"\r\nclass SearchPanel extends Component {\r\n  state = {\r\n    value: '',\r\n   \r\n  };\r\n  onChangePanel = evt => {\r\n    const values = evt.target.value.toLowerCase();\r\n    this.props.setFilter(values)\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <h3 className={styles.title}>Find contacts by name</h3>\r\n        <TextField id=\"filled-search\" label=\"Search contact\" type=\"search\" variant=\"outlined\" \r\n          onChange={this.onChangePanel} className={styles.searchField}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>({\r\n  setFilter: (value)=> dispatch(setFilter(value))\r\n}\r\n)\r\n\r\nexport default connect(null,mapDispatchToProps)(SearchPanel);","import React, { Component } from \"react\";\r\nimport ContactItem from \"../contact-item/ContactItem\";\r\nimport SearchPanel from \"../search-panel/SearchPanel\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport slideTransition from \"../transitions/slide-transition.module.css\";\r\nimport {connect} from \"react-redux\"\r\nclass ContactList extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ isOpen: true });\r\n  }\r\n  render() {\r\n    const { isOpen } = this.state;\r\n    return (\r\n      <div className={styles.contactsContainer}>\r\n        <CSSTransition in={isOpen} timeout={400} classNames={slideTransition}>\r\n          <h2 className={styles.title}>Contacts</h2>\r\n        </CSSTransition>\r\n        <div className={styles.wrapper}>\r\n          {this.props.contacts.length > 1 && (\r\n            <SearchPanel\r\n            //  onHandleFilter={this.props.onHandleFilter} \r\n             />\r\n          )}\r\n\r\n          <TransitionGroup component=\"ul\" className={styles.list}>\r\n            {this.props.value &&\r\n              this.props.value.map(elem => (\r\n                <CSSTransition\r\n                  key={elem.id}\r\n                  timeout={400}\r\n                  classNames={slideTransition}\r\n                >\r\n                  <li data-value={elem.id}>\r\n                    <ContactItem\r\n                      {...elem}\r\n                      // handleDelete={this.props.handleDelete}\r\n                    />\r\n                  </li>\r\n                </CSSTransition>\r\n              ))}\r\n          </TransitionGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts\r\n})\r\n\r\n// const mapDispatchToProps = {\r\n  \r\n// }\r\n\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport styles from \"./Notification.module.css\"\r\nconst Notification = ({title}) => \r\n{\r\n    return (\r\n        <div className={styles.container}>\r\n<p>{title}</p>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport slideTransition from \"../transitions/slide-transition.module.css\";\r\nimport shortId from \"short-id\";\r\nimport ContactList from \"../contact-list/ContactList\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport styles from \"./PhonebookForm.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"typeface-roboto\";\r\nimport Notification from \"../alert/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact, deleteContact, setAllContacts } from \"../../redux/actions\";\r\nclass PhonebookForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    isOpen: false,\r\n    error: false,\r\n    alreadyExist: false,\r\n    notitficationTitle: \"\"\r\n  };\r\n  componentDidMount() {\r\n    const users = JSON.parse(localStorage.getItem(\"users\"));\r\n    this.props.setAllContacts(users);\r\n    this.setState({ isOpen: true, alreadyExist: false });\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      JSON.stringify(prevState.contacts) !== JSON.stringify(this.props.contacts)\r\n    ) {\r\n      localStorage.setItem(\"users\", JSON.stringify(this.props.contacts));\r\n    }\r\n  }\r\n\r\n  deleteItems = id => {\r\n    this.setState(({ contacts }) => {\r\n      const newArr = contacts.filter(elem => elem.id !== id);\r\n      return {\r\n        contacts: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  onHandleGetValue = evt => {\r\n    const value = evt.target.value;\r\n    const name = evt.target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  onHandleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    if (!name || !number) {\r\n      alert(\"PLease fill all the fields\");\r\n      return;\r\n    }\r\n    if (this.props.contacts.find(elem => elem.name.includes(name))) {\r\n      this.showNotification(`This contact: ${name} already exists`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      id: shortId.generate(),\r\n      name,\r\n      number\r\n    };\r\n    this.setState({ name: \"\" });\r\n    this.setState({ number: \"\" });\r\n    this.props.addContact(contact);\r\n  };\r\n\r\n  getPost = post => {\r\n    this.setState(state => ({\r\n      contacts: [...state.contacts, post]\r\n    }));\r\n  };\r\n\r\n  filterItems = (filter, contacts) => {\r\n    if (this.props.contacts) {\r\n      let contactList = [...contacts];\r\n      if (filter) {\r\n        contactList = contactList.filter(elem =>\r\n          elem.name.toLowerCase().includes(filter)\r\n        );\r\n      }\r\n      return contactList;\r\n    }\r\n  };\r\n\r\n  showNotification = notificationTitle => {\r\n    this.setState({ notificationTitle, alreadyExist: true });\r\n    setTimeout(\r\n      () =>\r\n        this.setState({\r\n          notificationTitle: \"\",\r\n          alreadyExist: false,\r\n          name: \"\",\r\n          number: \"\"\r\n        }),\r\n      3000\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.props;\r\n    const { name, number } = this.state;\r\n    const filteredItems = this.filterItems(filter, contacts);\r\n    const { isOpen, alreadyExist } = this.state;\r\n    return (\r\n      <div>\r\n        <CSSTransition\r\n          in={alreadyExist}\r\n          timeout={400}\r\n          classNames={slideTransition}\r\n          unmountOnExit\r\n        >\r\n          <Notification title={this.state.notificationTitle} />\r\n        </CSSTransition>\r\n\r\n        <form\r\n          onSubmit={this.onHandleSubmit}\r\n          className={styles.phonebook}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          <CSSTransition\r\n            in={isOpen}\r\n            timeout={400}\r\n            classNames={slideTransition}\r\n            unmountOnExit\r\n          >\r\n            <h2 className={styles.title}>Phonebook</h2>\r\n          </CSSTransition>\r\n          <div className={styles.wrapper}>\r\n            <TextField\r\n              id=\"outlined-basic1\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              type=\"text\"\r\n              onChange={this.onHandleGetValue}\r\n              value={name}\r\n              name=\"name\"\r\n              className={styles.input}\r\n              autoComplete=\"string\"\r\n            />\r\n            <TextField\r\n              error={this.state.error}\r\n              id=\"outlined-basic2\"\r\n              label=\"Number\"\r\n              variant=\"outlined\"\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={this.onHandleGetValue}\r\n              name=\"number\"\r\n              className={styles.input}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Add contact\r\n            </Button>\r\n          </div>\r\n        </form>\r\n        {contacts.length > 0 && <ContactList value={filteredItems} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n  filter: state.filter\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: contact => dispatch(addContact(contact)),\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n  setAllContacts: contacts => dispatch(setAllContacts(contacts))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookForm);\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Phonebook from \"../phonebook-form/PhonebookForm\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Phonebook />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import Type from \"../redux/types\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst initialState = { contacts: [], filter: \"\" };\r\n\r\nexport const contacts = (state = initialState.contacts, { type, payload }) => {\r\n  switch (type) {\r\n    case Type.ADD_CONTACT:\r\n      return [...state, payload];\r\n    case Type.DELETE_CONTACT:\r\n      return state.filter(elem => elem.id !== payload);\r\n    case Type.SET_ALL_CONTACTS:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const filter = (state = initialState.filter, { type, payload }) => {\r\n  switch (type) {\r\n    case Type.SET_FILTER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./redux/reducers\"\r\n\r\nexport const store = createStore(rootReducer, devToolsEnhancer());\r\n ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\nimport { Provider } from \"react-redux\";\n\nimport {store} from \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide-transition_enter__1tiCh\",\"enterActive\":\"slide-transition_enterActive__kYugx\",\"exit\":\"slide-transition_exit__3ZmO-\",\"exitActive\":\"slide-transition_exitActive__gIPEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"PhonebookForm_phonebook__oAARH\",\"wrapper\":\"PhonebookForm_wrapper__1U0wU\",\"input\":\"PhonebookForm_input__1iAeS\",\"title\":\"PhonebookForm_title__2TVDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsContainer\":\"ContactList_contactsContainer__2Fspj\",\"wrapper\":\"ContactList_wrapper__oRNiA\",\"list\":\"ContactList_list__2Mcon\",\"title\":\"ContactList_title__3NOVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SearchPanel_wrapper__15YVB\",\"searchField\":\"SearchPanel_searchField__2E7ae\",\"title\":\"SearchPanel_title__2b5mT\"};"],"sourceRoot":""}